% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install_vimure}
\alias{install_vimure}
\title{Install Vimure and its dependencies}
\usage{
install_vimure(
  method = c("auto", "virtualenv", "conda"),
  conda = "auto",
  version = "develop",
  envname = NULL,
  restart_session = TRUE,
  conda_python_version = NULL,
  ...,
  force = FALSE,
  pip_ignore_installed = TRUE,
  python_version = conda_python_version
)
}
\arguments{
\item{method}{Installation method. By default, "auto" automatically finds a
method that will work in the local environment. Change the default to force
a specific installation method. Note that the "virtualenv" method is not
available on Windows.}

\item{conda}{The path to a \code{conda} executable. Use \code{"auto"} to allow
\code{reticulate} to automatically find an appropriate \code{conda} binary.
See \strong{Finding Conda} and \code{\link[reticulate:conda_binary]{conda_binary()}} for more details.}

\item{version}{Vimure version to install. Valid values include:
\itemize{
\item \code{"default"} installs  \verb{develop branch}
\item A version specification like \code{"2.4"} or \code{"2.4.0"}. Note that if the patch
version is not supplied, the latest patch release is installed (e.g.,
\code{"2.4"} today installs version "2.4.2")
\item The full URL or path to a installer binary or python *.whl file.
}}

\item{envname}{The name, or full path, of the environment in which Python
packages are to be installed. When \code{NULL} (the default), the active
environment as set by the \code{RETICULATE_PYTHON_ENV} variable will be used;
if that is unset, then the \code{r-reticulate} environment will be used.}

\item{restart_session}{Restart R session after installing (note this will
only occur within RStudio).}

\item{...}{other arguments passed to \code{\link[reticulate:conda-tools]{reticulate::conda_install()}} or
\code{\link[reticulate:virtualenv-tools]{reticulate::virtualenv_install()}}, depending on the \code{method} used.}

\item{force}{Whether pip should recreate 'r-reticulate' virtualenv.
This defaults to \code{FALSE}.}

\item{pip_ignore_installed}{Whether pip should ignore installed python
packages and reinstall all already installed python packages. This defaults
to \code{TRUE}, to ensure that Vimure dependencies like NumPy are compatible
with the prebuilt Vimure binaries.}

\item{python_version, conda_python_version}{Pass a string like "3.8" to
request that conda install a specific Python version. This is ignored when
attempting to install in a Python virtual environment. Note that the Python
version must be compatible with the requested Vimure version, documented
here: \url{https://github.com/latentnetworks/vimure/blob/develop/src/python/setup.py}}
}
\description{
\code{install_vimure()} installs just the vimure python package and it's
direct dependencies.
}
\details{
You may be prompted to download and install
miniconda if reticulate did not find a non-system installation of python.
Miniconda is the recommended installation method for most users, as it
ensures that the R python installation is isolated from other python
installations. All python packages will by default be installed into a
self-contained conda or venv environment named "r-reticulate". Note that
"conda" is the only supported method on M1 Mac.

If you initially declined the miniconda installation prompt, you can later
manually install miniconda by running \code{\link[reticulate:install_miniconda]{reticulate::install_miniconda()}}.
}
\section{Custom Installation}{
 \code{install_vimure()} isn't required to use vimure with the package.
If you manually configure a python environment with the required
dependencies, you can tell R to use it by pointing reticulate at it,
commonly by setting an environment variable:

\if{html}{\out{<div class="sourceCode R">}}\preformatted{Sys.setenv("RETICULATE_PYTHON" = "~/path/to/python-env/bin/python")
}\if{html}{\out{</div>}}
}

