% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{parse_graph_from_edgelist}
\alias{parse_graph_from_edgelist}
\title{Parses an edgelist dataframe to vm.io.RealNetwork class}
\usage{
parse_graph_from_edgelist(
  edges,
  nodes = NULL,
  reporters = NULL,
  weighted = F,
  directed = F,
  ego = "Ego",
  alter = "Alter",
  reporter = "reporter",
  layer = "layer",
  weight = "weight",
  ...
)
}
\arguments{
\item{edges}{data.frame representing the edgelist.}

\item{nodes}{List of all nodes.}

\item{reporters}{List of the nodes who took the survey.}

\item{weighted}{Whether to add weights to the adjancency matrix.}

\item{directed}{Whether to create a directed graph.}

\item{ego}{Column name for mapping Ego.}

\item{alter}{Column name for mapping Alter.}

\item{reporter}{Column name for mapping reporter.}

\item{layer}{Column name for mapping layer.}

\item{weight}{Column name for mapping weight.}

\item{...}{Additional args of vm.io.RealNetwork class}
}
\value{
vimureP$io$RealNetwork
}
\description{
parse_graph_from_edgelist creates a vimure.io.RealNetwork from an edgelist dataframe.
Its argument is a dataframe with at least Ego and Alter columns, each row defines one edge.
The dataframe can contains three optional columns:
'reporter' for identify who reports each edge, 'layer' for multidimensions networks and 'weight' for
a weighted adjancency matrix
Use the params \code{ego}, \code{alter}, \code{reporter}, \code{weight} and \code{layer} to map the dataframe columns.
}
